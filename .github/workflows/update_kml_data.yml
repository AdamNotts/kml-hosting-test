name: Fetch Live KML Data

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  fetch-and-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch and Clean KML
        shell: bash
        run: |
          set -euo pipefail
          echo "Downloading KML data..."
          curl -fL --retry 3 --retry-delay 5 --connect-timeout 15 \
            -o live_data.kml "https://theowl.pildo.com/foreflight/foreFlightKml/adsb?token=xrrbezzrik1749035639392"
          
          echo "Cleaning KML data..."
          # This single perl command runs all cleaning operations
          perl -pi -e '
            # FIX: Remove stray "cd" text that breaks the KML schema
            s/<key>normal<\/key>cd/<key>normal<\/key>/g;

            # FIX: Strip all complex inline CSS from description HTML for better compatibility
            s/ style="[^"]*"//g;
            s/ style=\'[^\']*\'//g;
            
            # Original character replacement for "Ã–stra"
            s/(?:\x{00D6}|O\x{0308})stra/Ostra/g;
            s/(?:\x{00F6}|o\x{0308})stra/ostra/g;
            s/&Ouml;stra/Ostra/g;
            s/&ouml;stra/ostra/g;
            s/&#214;stra/Ostra/g;
            s/&#246;stra/ostra/g;
          ' live_data.kml

          echo "Cleaning complete."

      - name: Create KMZ archive
        shell: bash
        run: |
          set -euo pipefail
          rm -f live_data.kmz
          zip -j -X -9 live_data.kmz live_data.kml
          zip -T live_data.kmz

      - name: Create NetworkLink KML File
        shell: bash
        run: |
          set -euo pipefail
          cat > network_link.kml <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <kml xmlns="http://www.opengis.net/kml/2.2">
            <NetworkLink>
              <name>Live Helicopter Data</name>
              <Link>
                <href>https://raw.githubusercontent.com/AdamNotts/kml-hosting-test/main/live_data.kml?v=${{ github.run_id }}</href>
                <refreshMode>onInterval</refreshMode>
                <refreshInterval>300</refreshInterval>
              </Link>
            </NetworkLink>
          </kml>
          EOF

      - name: Commit and push changes
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add all three files to be committed
          git add live_data.kml
          git add live_data.kmz
          git add network_link.kml
          
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit."
          else
            git commit -m "Automated KML data update"
            git push
          fi
