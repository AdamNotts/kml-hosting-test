name: Fetch Live KML Data

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  fetch-and-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch and Clean KML
        shell: bash
        run: |
          set -euo pipefail
          
          echo "Downloading KML data..."
          curl -fL --retry 3 --retry-delay 5 --connect-timeout 15 \
            -o live_data.kml "https://theowl.pildo.com/foreflight/foreFlightKml/adsb?token=xrrbezzrik1749035639392"

          echo "Ensuring UTF-8..."
          # If the source is already UTF-8, iconv will fail; that's fine—we'll keep the original.
          if iconv -f ISO-8859-1 -t UTF-8 -o live_data_utf8.kml live_data.kml 2>/dev/null; then
            mv live_data_utf8.kml live_data.kml
          else
            echo "iconv not needed or failed; proceeding with the original file."
          fi

          echo "Normalizing Unicode and replacing all 'Östra' variants..."
          python3 - <<'PY'
import io, unicodedata
p = "live_data.kml"
with io.open(p, "r", encoding="utf-8", errors="strict") as f:
    s = f.read()

# Normalize to NFC so decomposed sequences like "O" + COMBINING DIAERESIS
# become the precomposed "Ö", ensuring replacements match.
s = unicodedata.normalize("NFC", s)

# Replace all likely spellings/entities of Ö/ö in 'Östra'
s = (s
     .replace("Östra", "Ostra")
     .replace("östra", "ostra")
     .replace("Östra", "Ostra")   # in case normalization didn't catch something
     .replace("östra", "ostra")
     .replace("&Ouml;stra", "Ostra")
     .replace("&ouml;stra", "ostra")
     .replace("&#214;stra", "Ostra")
     .replace("&#246;stra", "ostra")
)

with io.open(p, "w", encoding="utf-8", newline="") as f:
    f.write(s)
PY

          echo "Verifying replacement..."
          if grep -Pq '(?:Östra|O\x{0308}stra|&Ouml;stra|&#214;stra|östra|o\x{0308}stra|&ouml;stra|&#246;stra)' live_data.kml; then
            echo "ERROR: Some 'Östra' variants remain:"
            grep -Pn '(?:Östra|O\x{0308}stra|&Ouml;stra|&#214;stra|östra|o\x{0308}stra|&ouml;stra|&#246;stra)' live_data.kml | head -n 20
            exit 1
          else
            echo "Success: All 'Östra' variants replaced with 'Ostra'."
          fi

      - name: Create KMZ archive (fresh)
        shell: bash
        run: |
          set -euo pipefail
          rm -f live_data.kmz
          # -j junks paths so only the filename is stored
          zip -j -X -9 live_data.kmz live_data.kml
          zip -T live_data.kmz

      - name: Commit and push if changed
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add live_data.kmz
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit."
          else
            git commit -m "Automated KML data update"
            git push
          fi
